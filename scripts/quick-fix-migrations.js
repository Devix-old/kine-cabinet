#!/usr/bin/env node

/**
 * Solution rapide pour corriger les migrations Prisma
 */

import { execSync } from 'child_process'
import { existsSync, unlinkSync, rmdirSync } from 'fs'
import { join } from 'path'

console.log('üöÄ SOLUTION RAPIDE POUR LES MIGRATIONS')
console.log('=' .repeat(50))

const problematicMigration = '20250115000000_enhance_medical_records'
const migrationsDir = join(process.cwd(), 'prisma', 'migrations')
const problematicPath = join(migrationsDir, problematicMigration)

console.log('\n1Ô∏è‚É£ SUPPRESSION DE LA MIGRATION PROBL√âMATIQUE')
console.log('-'.repeat(40))

if (existsSync(problematicPath)) {
  try {
    // Supprimer le dossier de migration probl√©matique
    rmdirSync(problematicPath, { recursive: true })
    console.log(`‚úÖ Migration probl√©matique supprim√©e: ${problematicMigration}`)
  } catch (error) {
    console.log('‚ùå Erreur suppression:', error.message)
    console.log('üí° Supprimez manuellement le dossier: prisma/migrations/20250115000000_enhance_medical_records')
    process.exit(1)
  }
} else {
  console.log('‚ÑπÔ∏è  Migration probl√©matique d√©j√† supprim√©e')
}

console.log('\n2Ô∏è‚É£ R√âINITIALISATION DE LA BASE DE DONN√âES')
console.log('-'.repeat(40))

try {
  console.log('üîÑ R√©initialisation en cours...')
  execSync('npx prisma migrate reset --force', { stdio: 'inherit' })
  console.log('‚úÖ Base de donn√©es r√©initialis√©e avec succ√®s')
} catch (error) {
  console.log('‚ùå Erreur r√©initialisation:', error.message)
  console.log('\nüí° Solution manuelle:')
  console.log('   1. Supprimez manuellement le dossier de migration probl√©matique')
  console.log('   2. Ex√©cutez: npx prisma migrate reset --force')
  process.exit(1)
}

console.log('\n3Ô∏è‚É£ V√âRIFICATION')
console.log('-'.repeat(40))

try {
  console.log('üîÑ V√©rification des migrations...')
  execSync('npx prisma migrate status', { stdio: 'inherit' })
  console.log('‚úÖ Migrations v√©rifi√©es')
} catch (error) {
  console.log('‚ö†Ô∏è  V√©rification √©chou√©e, mais la base de donn√©es devrait fonctionner')
}

console.log('\n4Ô∏è‚É£ TEST DE CONNEXION')
console.log('-'.repeat(40))

try {
  console.log('üîÑ Test de connexion...')
  execSync('npx prisma db push', { stdio: 'inherit' })
  console.log('‚úÖ Connexion test√©e avec succ√®s')
} catch (error) {
  console.log('‚ùå Erreur test connexion:', error.message)
}

console.log('\nüéØ SOLUTION APPLIQU√âE')
console.log('=' .repeat(50))
console.log('üí° Prochaines √©tapes:')
console.log('   1. Testez: npm run debug:database')
console.log('   2. Red√©marrez: npm run dev')
console.log('   3. Si n√©cessaire, recr√©ez la migration: npx prisma migrate dev --name enhance_medical_records')
