#!/usr/bin/env node

/**
 * Script de lancement pour la g√©n√©ration de donn√©es de test
 * Usage: npm run generate-test-data
 * ou: node scripts/run-test-data-generation.js
 */

const KineTestDataGenerator = require('./generate-kine-test-data')

console.log('üöÄ D√©marrage de la g√©n√©ration de donn√©es de test pour cabinet de kin√©sith√©rapie')
console.log('==================================================================')
console.log('')

async function main() {
  try {
    const generator = new KineTestDataGenerator()
    await generator.run()
    
    console.log('')
    console.log('‚ú® Donn√©es de test g√©n√©r√©es avec succ√®s!')
    console.log('')
    console.log('üìå Prochaines √©tapes:')
    console.log('  1. Connectez-vous √† votre application')
    console.log('  2. Naviguez vers http://localhost:3000/dashboard')
    console.log('  3. Explorez vos nouveaux patients, rendez-vous et traitements')
    console.log('')
    console.log('üîß Pour relancer la g√©n√©ration:')
    console.log('  npm run generate-test-data')
    console.log('')
    
  } catch (error) {
    console.error('')
    console.error('‚ùå ERREUR lors de la g√©n√©ration:')
    console.error('================================')
    console.error('')
    
    if (error.message.includes('Aucun cabinet de kin√©sith√©rapie trouv√©')) {
      console.error('üè• Probl√®me: Aucun cabinet de kin√©sith√©rapie trouv√© dans la base de donn√©es')
      console.error('')
      console.error('üí° Solution:')
      console.error('  1. Connectez-vous √† votre application')
      console.error('  2. Cr√©ez un cabinet de type "KINESITHERAPIE"')
      console.error('  3. Relancez ce script')
      console.error('')
    } else if (error.message.includes('Aucun utilisateur trouv√©')) {
      console.error('üë§ Probl√®me: Aucun utilisateur trouv√© dans le cabinet')
      console.error('')
      console.error('üí° Solution:')
      console.error('  1. Assurez-vous qu\'un utilisateur est associ√© au cabinet')
      console.error('  2. V√©rifiez les donn√©es utilisateur dans la base')
      console.error('')
    } else {
      console.error('D√©tails de l\'erreur:')
      console.error(error.message)
      console.error('')
      console.error('Stack trace:')
      console.error(error.stack)
    }
    
    console.error('')
    console.error('üÜò Si le probl√®me persiste:')
    console.error('  1. V√©rifiez que la base de donn√©es est accessible')
    console.error('  2. V√©rifiez les variables d\'environnement (.env)')
    console.error('  3. V√©rifiez que Prisma est configur√© correctement')
    console.error('')
    
    process.exit(1)
  }
}

// Gestion propre de l'arr√™t du script
process.on('SIGINT', () => {
  console.log('')
  console.log('‚ö†Ô∏è  Script interrompu par l\'utilisateur')
  process.exit(0)
})

process.on('SIGTERM', () => {
  console.log('')
  console.log('‚ö†Ô∏è  Script termin√©')
  process.exit(0)
})

// Lancement du script
main()

