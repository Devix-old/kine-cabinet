#!/usr/bin/env node

/**
 * Script pour corriger l'ordre des migrations Prisma
 */

import { execSync } from 'child_process'
import { readdirSync, renameSync, existsSync } from 'fs'
import { join } from 'path'

console.log('üîß CORRECTION DE L\'ORDRE DES MIGRATIONS')
console.log('=' .repeat(50))

const migrationsDir = join(process.cwd(), 'prisma', 'migrations')

// 1. V√©rifier que le dossier migrations existe
if (!existsSync(migrationsDir)) {
  console.log('‚ùå Dossier migrations non trouv√©')
  process.exit(1)
}

// 2. Lister les migrations
console.log('\n1Ô∏è‚É£ MIGRATIONS ACTUELLES')
console.log('-'.repeat(40))

const migrations = readdirSync(migrationsDir)
  .filter(name => name !== 'migration_lock.toml')
  .sort()

migrations.forEach(migration => {
  console.log(`   ${migration}`)
})

// 3. Identifier le probl√®me
console.log('\n2Ô∏è‚É£ IDENTIFICATION DU PROBL√àME')
console.log('-'.repeat(40))

const problematicMigration = '20250115000000_enhance_medical_records'
const initMigration = '20250808133637_init_multi_tenant'

if (migrations.includes(problematicMigration) && migrations.includes(initMigration)) {
  console.log('‚ùå Probl√®me d√©tect√©:')
  console.log(`   - Migration probl√©matique: ${problematicMigration}`)
  console.log(`   - Migration initiale: ${initMigration}`)
  console.log('   - La migration probl√©matique a une date ant√©rieure mais d√©pend de tables cr√©√©es plus tard')
} else {
  console.log('‚úÖ Aucun probl√®me d\'ordre d√©tect√©')
  process.exit(0)
}

// 4. Proposer des solutions
console.log('\n3Ô∏è‚É£ SOLUTIONS DISPONIBLES')
console.log('-'.repeat(40))

console.log('üí° Solutions possibles:')
console.log('   1. Supprimer la migration probl√©matique et la recr√©er')
console.log('   2. Renommer la migration avec une date post√©rieure')
console.log('   3. R√©initialiser compl√®tement la base de donn√©es')

console.log('\n4Ô∏è‚É£ SOLUTION RECOMMAND√âE')
console.log('-'.repeat(40))

console.log('üéØ Solution recommand√©e: Supprimer et recr√©er la migration')
console.log('   Cette migration semble √™tre une am√©lioration qui devrait √™tre appliqu√©e apr√®s l\'initialisation')

// 5. Ex√©cuter la solution
console.log('\n5Ô∏è‚É£ EX√âCUTION DE LA SOLUTION')
console.log('-'.repeat(40))

try {
  // Supprimer la migration probl√©matique
  const problematicPath = join(migrationsDir, problematicMigration)
  if (existsSync(problematicPath)) {
    console.log(`üîÑ Suppression de la migration probl√©matique: ${problematicMigration}`)
    execSync(`rmdir /s /q "${problematicPath}"`, { stdio: 'inherit' })
    console.log('‚úÖ Migration probl√©matique supprim√©e')
  }

  // R√©initialiser la base de donn√©es
  console.log('\nüîÑ R√©initialisation de la base de donn√©es...')
  execSync('npx prisma migrate reset --force', { stdio: 'inherit' })
  console.log('‚úÖ Base de donn√©es r√©initialis√©e')

  // Recr√©er la migration probl√©matique avec une date post√©rieure
  console.log('\nüîÑ Recr√©ation de la migration avec une date correcte...')
  execSync('npx prisma migrate dev --name enhance_medical_records', { stdio: 'inherit' })
  console.log('‚úÖ Migration recr√©√©e avec succ√®s')

} catch (error) {
  console.log('‚ùå Erreur lors de l\'ex√©cution:', error.message)
  console.log('\nüí° Solution manuelle:')
  console.log('   1. Supprimez manuellement le dossier: prisma/migrations/20250115000000_enhance_medical_records')
  console.log('   2. Ex√©cutez: npx prisma migrate reset --force')
  console.log('   3. Ex√©cutez: npx prisma migrate dev --name enhance_medical_records')
  process.exit(1)
}

console.log('\n6Ô∏è‚É£ V√âRIFICATION')
console.log('-'.repeat(40))

try {
  // V√©rifier que les migrations sont correctes
  execSync('npx prisma migrate status', { stdio: 'inherit' })
  console.log('‚úÖ Migrations v√©rifi√©es avec succ√®s')
} catch (error) {
  console.log('‚ö†Ô∏è  V√©rification des migrations √©chou√©e, mais la base de donn√©es devrait fonctionner')
}

console.log('\nüéØ CORRECTION TERMIN√âE')
console.log('=' .repeat(50))
console.log('üí° Prochaines √©tapes:')
console.log('   1. Testez la connexion: npm run debug:database')
console.log('   2. Red√©marrez le serveur: npm run dev')
console.log('   3. V√©rifiez que les APIs fonctionnent correctement')
